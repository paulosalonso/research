<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.paulosalonso</groupId>
	<artifactId>research</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>research</name>
	<description>Research API</description>

	<properties>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.it.tests>false</skip.it.tests>
		<skip.mutation>true</skip.mutation>

		<line.coverage>1.00</line.coverage>
		<branch.coverage>1.00</branch.coverage>
		<mutation.threshold>100</mutation.threshold>

		<java.version>11</java.version>

		<jacoco.version>0.8.5</jacoco.version>
		<springfox.version>3.0.0</springfox.version>
		<maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
		<testcontainers.version>1.15.1</testcontainers.version>
		<spring-cloud.version>2020.0.0</spring-cloud.version>
		<pitest.version>1.5.2</pitest.version>
		<pitest-junit5-plugin.version>0.12</pitest-junit5-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-okhttp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-mock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-jackson</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<skipTests>${skipTests}</skipTests>
					<argLine> ${argLine} --illegal-access=permit </argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<argLine>
						<!--  ${argLine} - necessÃ¡rio para funcionar o jacoco corretamente -->
						${argLine} --illegal-access=permit
					</argLine>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<skipTests>${skip.it.tests}</skipTests>
							<skipTests>${skipTests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<exclude>**/ResearchApplication.*</exclude>
						<exclude>**/OpenApiConfiguration.*</exclude>
						<exclude>**/jwtconverter/**</exclude>
						<exclude>**/jwtdecoder/**</exclude>
						<exclude>**/SecurityInfo.*</exclude>
						<exclude>**/Claims.*</exclude>
						<exclude>**/TenantNotProvidedException.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<skip>${skip.unit.tests}</skip>
							<skip>${skip.it.tests}</skip>
							<skip>${skipTests}</skip>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>${line.coverage}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${branch.coverage}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>${pitest-junit5-plugin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mutationThreshold>${mutation.threshold}</mutationThreshold>
					<skip>${skip.mutation}</skip>
					<mutators>
						<!-- DEFAULT LIST, WITHOUT NULL_RETURNS -->
						<mutator>CONDITIONALS_BOUNDARY</mutator>
						<mutator>INCREMENTS</mutator>
						<mutator>INVERT_NEGS</mutator>
						<mutator>MATH</mutator>
						<mutator>NEGATE_CONDITIONALS</mutator>
						<mutator>VOID_METHOD_CALLS</mutator>
						<mutator>EMPTY_RETURNS</mutator>
						<mutator>FALSE_RETURNS</mutator>
						<mutator>TRUE_RETURNS</mutator>
						<mutator>PRIMITIVE_RETURNS</mutator>
					</mutators>
					<targetClasses>
						<param>com.github.paulosalonso.research.*</param>
					</targetClasses>
					<targetTests>
						<param>com.github.paulosalonso.research.*</param>
					</targetTests>
					<excludedClasses>
						<param>com.github.paulosalonso.research.application.*</param>
						<param>com.github.paulosalonso.research.adapter.jpa.repository.*</param>
						<param>**Controller*</param>
					</excludedClasses>
					<excludedTestClasses>
						<param>**IT*</param>
					</excludedTestClasses>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mutation</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.it.tests>true</skip.it.tests>
				<skip.mutation>false</skip.mutation>
			</properties>
		</profile>

		<profile>
			<id>no-tests</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
				<skip.it.tests>true</skip.it.tests>
				<skip.mutation>true</skip.mutation>
			</properties>
		</profile>

		<profile>
			<id>docker-local</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven-dependency-plugin.version}</version>
						<executions>
							<execution>
								<id>copy-installed</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<version>${project.version}</version>
											<type>${project.packaging}</type>
											<destFileName>${project.build.finalName}.jar</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.basedir}/.docker</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
